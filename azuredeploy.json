{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "multinicvm",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
   "vmName": {
      "type": "string",
      "defaultValue": "multinicvm",
      "metadata": {
        "description": "Name of the VM"
      }
    },
    "vmSize": {
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2"
      ],
      "metadata": {
        "description": "Size of the VM"
      },
      "type": "string"
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",

    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'samultinic')]",
    "storageAccountType": "Standard_LRS",

    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",

    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",

    "vnetName": "vnet",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "vnetaddressPrefix": "10.0.0.0/16",

    "adminNicName": "adminNic",
    "adminSubnetName": "Admin",
    "adminSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('adminSubnetName'))]",
    "adminSubnetPrefix": "10.0.1.0/24",
    "adminSubnetPrivateAddress": "10.0.1.5",

    "backupNicName": "backupNic",
    "backupSubnetName": "Backup",
    "backupSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('backupSubnetName'))]",
    "backupSubnetPrefix": "10.0.2.0/24",
    "backupSubnetPrivateAddress": "10.0.2.5",
    
    "publicNicName": "publicNic",
    "publicSubnetName": "Public",
    "publicSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('publicSubnetName'))]",
    "publicSubnetPrefix": "10.0.3.0/24",
    "publicSubnetPrivateAddress": "10.0.3.5",
    
    "publicIPAddressName": "[concat(uniquestring(resourceGroup().id), 'PublicIp')]",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageAccountName')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('vnetName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetaddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('adminSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('adminSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('backupSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('backupSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('publicSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('publicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmName')]"
        },
        "idleTimeoutInMinutes": 30,
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('adminNicName')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAddress": "[variables('adminSubnetPrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('adminSubnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('backupNicName')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAddress": "[variables('backupSubnetPrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('backupSubnetId')]"
              }
            }
          }
        ]
      }
    },
  {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]",
        "[variables('publicIPAddressId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('publicNicName')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAddress": "[variables('publicSubnetPrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "PublicIpAddress": {
                "Id": "[variables('publicIPAddressId')]"
              },
              "subnet": {
                "id": "[variables('publicSubnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('adminNicName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('backupNicName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('publicNicName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('vmName')]",
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('adminNicName'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('backupNicName'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('publicNicName'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('vmName'), '.vhd')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', parameters('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    } 
  }
}
